{"version":3,"file":"table.js","sources":["../../../../src/tile-layout/table-utils/table.ts"],"sourcesContent":["import { GridConfig, GridCoords, GridSpan, TableOf } from '../model';\n\nexport const newTable = <T>(rows: number, cols: number, value: T): TableOf<T> =>\n  new Array(rows).fill(null).map(_ => new Array(cols).fill(value));\n\nexport const copyTable = <T>(table: TableOf<T>): TableOf<T> =>\n  [...table].map(row => [...row]);\n\nexport const tableSize = <T>(table: TableOf<T>) => {\n  const rows = table.length;\n  const cols = rows ? table[0].length : 0;\n  return { rows, cols };\n};\n\nexport const isEmptyRow = <T>(row: Array<T>) => !row.find(cell => !!cell);\n\nexport const trimLocation = <T>(\n  table: TableOf<T>,\n  { col, row }: GridCoords\n) => {\n  const { cols, rows } = tableSize(table);\n  return {\n    col: col < 0 ? 0 : col >= cols ? cols - 1 : col,\n    row: row < 0 ? 0 : row >= rows ? rows - 1 : row,\n  };\n};\nexport const pointToLocation = <T>(\n  table: TableOf<T>,\n  x: number,\n  y: number,\n  { elementWidth, elementHeight }: GridConfig\n) => {\n  const col = Math.floor(x / elementWidth);\n  const row = Math.floor(y / elementHeight);\n  return trimLocation(table, { col, row });\n};\n\nexport const fitsInTable = <T>(\n  coords: GridCoords & GridSpan,\n  table: TableOf<T>\n) => {\n  const { rows, cols } = tableSize(table);\n  for (let row = coords.row; row < coords.row + coords.rowSpan; row++) {\n    for (let col = coords.col; col < coords.col + coords.colSpan; col++) {\n      if (row > rows || col > cols) return false;\n      if (table[row][col]) return false;\n    }\n  }\n  return true;\n};\n\nexport const placeInTable = <T>(\n  coords: GridCoords & GridSpan,\n  data: T,\n  table: TableOf<T>\n): TableOf<T> => {\n  const newTable = copyTable(table);\n  for (let row = coords.row; row < coords.row + coords.rowSpan; row++) {\n    for (let col = coords.col; col < coords.col + coords.colSpan; col++) {\n      newTable[row][col] = data;\n    }\n  }\n  return newTable;\n};\n\nexport const findFirstFittingPosition = <T>(\n  span: GridSpan,\n  table: TableOf<T>\n): GridCoords | undefined => {\n  const { rows, cols } = tableSize(table);\n  let free = true;\n  for (let tableRow = 0; tableRow <= rows - span.rowSpan; tableRow++) {\n    for (let tableCol = 0; tableCol <= cols - span.colSpan; tableCol++) {\n      //check if all cells are available\n      free = true;\n      for (let cellRow = 0; cellRow < span.rowSpan; cellRow++) {\n        for (let cellCol = 0; cellCol < span.colSpan; cellCol++) {\n          free = free && !table[tableRow + cellRow][tableCol + cellCol];\n        }\n      }\n      if (free) {\n        return { row: tableRow, col: tableCol };\n      }\n    }\n  }\n};\n"],"names":[],"mappings":"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"}