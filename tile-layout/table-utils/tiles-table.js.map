{"version":3,"file":"tiles-table.js","sources":["../../../../src/tile-layout/table-utils/tiles-table.ts"],"sourcesContent":["import { TilesTable, TilePositionInfo, TileInfo } from '../model';\nimport {\n  findFirstFittingPosition,\n  isEmptyRow,\n  newTable,\n  placeInTable,\n  tableSize,\n} from './table';\n\nexport const interceptTiles = <T>(\n  table: TilesTable<T>,\n  startRow: number,\n  startCol: number,\n  rowSpan: number,\n  colSpan: number\n) => {\n  let interceptTiles: TilePositionInfo<T>[] = [];\n  const { rows, cols } = tableSize(table);\n\n  for (let row = startRow; row < startRow + rowSpan; row++) {\n    if (row >= rows) continue;\n    for (let col = startCol; col < startCol + colSpan; col++) {\n      if (col >= cols) continue;\n      const cell = table[row][col];\n      if (cell && !interceptTiles.find(t => t.data === cell.data)) {\n        interceptTiles.push(cell);\n      }\n    }\n  }\n\n  return interceptTiles.sort(\n    (a, b) => a.col + a.row * cols - (b.col + b.row * cols)\n  );\n};\n\nexport const tableToTilesList = <T>(table: TilesTable<T>) => {\n  const { rows, cols } = tableSize(table);\n  return interceptTiles(table, 0, 0, rows, cols);\n};\n\nexport const tilesListToTable = <T>(\n  tiles: TileInfo<T>[],\n  columns: number\n): TilesTable<T> => {\n  const maxRows = tiles.reduce((memo, tile) => memo + tile.rowSpan, 0);\n  let table = newTable<TilePositionInfo<T> | undefined>(\n    maxRows,\n    columns,\n    undefined\n  );\n  tiles.forEach(tile => {\n    let position = findFirstFittingPosition(tile, table);\n    if (position) {\n      const fittedTile: TilePositionInfo<T> = { ...tile, ...position };\n      table = placeInTable(fittedTile, fittedTile, table);\n    }\n  });\n\n  //trim the table\n\n  return table.filter(row => !isEmptyRow(row)) as TilesTable<T>;\n};\n"],"names":[],"mappings":";;;IASa,cAAc,GAAG,UAC5B,KAAoB,EACpB,QAAgB,EAChB,QAAgB,EAChB,OAAe,EACf,OAAe;IAEf,IAAI,cAAc,GAA0B,EAAE,CAAC;IACzC,IAAA,KAAiB,SAAS,CAAC,KAAK,CAAC,EAA/B,IAAI,UAAA,EAAE,IAAI,UAAqB,CAAC;IAExC,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,GAAG,QAAQ,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE;QACxD,IAAI,GAAG,IAAI,IAAI;YAAE,SAAS;gCACjB,GAAG;YACV,IAAI,GAAG,IAAI,IAAI;kCAAW;YAC1B,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,GAAA,CAAC,EAAE;gBAC3D,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;QALH,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,GAAG,QAAQ,GAAG,OAAO,EAAE,GAAG,EAAE;oBAA/C,GAAG;SAMX;KACF;IAED,OAAO,cAAc,CAAC,IAAI,CACxB,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAA,CACxD,CAAC;AACJ,EAAE;IAEW,gBAAgB,GAAG,UAAI,KAAoB;IAChD,IAAA,KAAiB,SAAS,CAAC,KAAK,CAAC,EAA/B,IAAI,UAAA,EAAE,IAAI,UAAqB,CAAC;IACxC,OAAO,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,EAAE;IAEW,gBAAgB,GAAG,UAC9B,KAAoB,EACpB,OAAe;IAEf,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,IAAK,OAAA,IAAI,GAAG,IAAI,CAAC,OAAO,GAAA,EAAE,CAAC,CAAC,CAAC;IACrE,IAAI,KAAK,GAAG,QAAQ,CAClB,OAAO,EACP,OAAO,EACP,SAAS,CACV,CAAC;IACF,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;QAChB,IAAI,QAAQ,GAAG,wBAAwB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,QAAQ,EAAE;YACZ,IAAM,UAAU,yBAA6B,IAAI,GAAK,QAAQ,CAAE,CAAC;YACjE,KAAK,GAAG,YAAY,CAAC,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;SACrD;KACF,CAAC,CAAC;;IAIH,OAAO,KAAK,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,UAAU,CAAC,GAAG,CAAC,GAAA,CAAkB,CAAC;AAChE;;;;"}